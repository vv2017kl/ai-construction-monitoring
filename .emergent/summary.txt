<analysis>
The previous AI engineer successfully stabilized the AI-CONSTRUCTION MVP, first by rigorously debugging and enhancing the Cesium-based GeoSpatial View, resolving complex build and rendering issues for an immersive 3D experience. Post-Cesium completion, the user redirected focus to a comprehensive screen-by-screen analysis, aiming to build a robust backend roadmap. The engineer adopted a systematic approach, creating detailed documentation for each screen, outlining functional, database, VMS (ZoneMinder), and AI (Roboflow) integration requirements. A critical architectural decision was the establishment of a  as a single source of truth for all database definitions. So far, My Dashboard, GeoSpatial View, Live View, Alert Center, Site Overview, and Personnel Management screens have undergone this detailed analysis, with relevant updates to the master schema. The process involves deep dives into existing frontend code to extract backend needs, ensuring a bulletproof foundation for future development and migration to AWS MySQL.
</analysis>

<product_requirements>
The primary goal is to transform an existing AI-CONSTRUCTION - Digital Twin and Backoffice Development MVP into a comprehensive construction management system. Key functionalities already implemented include 8 out of 9 core screens (Dashboard, Live View, Alert Center, Site Overview, AI Analytics, Time Lapse, Reports Center, Admin Dashboard & User Directory) and a fully enhanced GeoSpatial View, offering a 3D interactive map with global site overview, drill-down navigation, and alert-based visualizations.

Future development focuses on critical backend and integration work:
1.  **Database Migration**: Transition from MongoDB to AWS MySQL, requiring detailed schema analysis per screen.
2.  **ZoneMinder Integration**: Build client API for video management, including querying its database and handling streams.
3.  **AI Integration**: Implement Roboflow-deployed YOLO models for detection (e.g., person, PPE), defining I/O structures.
4.  **Comprehensive Screen Analysis**: Document all 27 screens (17 User, 9 Admin, 1 dynamic) with functional, database, ZoneMinder, AI, and backend API specifications, maintaining a  for consistency.
5.  **Bug Fixes**: Resolve a known runtime bug in the Personnel Management screen.
6.  **Feature Completion**: Fully implement the My Profile screen's core functionality.
</product_requirements>

<key_technical_concepts>
-   **Full-stack Development**: React.js (frontend), FastAPI (backend).
-   **Database Technologies**: MongoDB (current), AWS MySQL (target).
-   **Geospatial Visualization**: CesiumJS (3D mapping library) with Cesium Ion.
-   **UI Framework**: Tailwind CSS, Lucide React icons.
-   **Video Management**: ZoneMinder (VMS).
-   **AI/Machine Learning**: Roboflow (deployed YOLO models).
-   **Build Tools**: Craco (React Webpack configuration).
-   **Dependency Management**: Yarn (frontend), pip (backend).
</key_technical_concepts>

<code_architecture>
The application follows a standard full-stack structure with distinct frontend and backend directories.



**Key Files and Modifications:**

-   ****: Frontend dependency manifest.  was added for Cesium.
-   ****: Frontend environment variables.  was added.
-   ****: Frontend build configuration. Updated with Webpack rules for CesiumJS, including  and  for  to resolve asset loading issues.
-   ****: Main React entry point. Routes like , , ,  were verified/exist, confirming screen routes.
-   ****: Application's main navigation. Modified to rename Dashboard Home to My Dashboard and add GeoSpatial View (with  icon). Its structure helps determine the logical flow of screen analysis.
-   ****: Overarching layout component. Updated to accept  prop for dynamic sidebar visibility, crucial for immersive Cesium mode.
-   ****: Primary 3D geospatial component. Refactored for immersive fullscreen mode, icon import fixes, state management for view modes, site/camera selection, and alert panel visibility. Adapted to new mock data for correct filtering and display.
-   ****: Renders Cesium globe. Integrated Cesium Ion token, added null checks/error handling, adjusted camera coordinate parsing, and updated // for alert-based factory/camera icons. Refined camera zoom levels.
-   ****: Interactive control panel for Cesium. Updated to group sites by , filter by , correct  to , and use .
-   ****: Mock data for Cesium map. Extensively updated with realistic construction sites, 100+ cameras, and comprehensive alert data for testing.
-   ****: User profile screen. Fixed  by adding missing  icon import.
-   ****: New document detailing requirements for My Dashboard. Fully updated with functional analysis, detailed fixed database schema, ZoneMinder, Roboflow, and backend API solutions, referencing .
-   ****: Newly created document detailing functional, database, ZoneMinder, AI, and backend API requirements for GeoSpatial View.
-   ****: Newly created document detailing functional, database, ZoneMinder, AI, and backend API requirements for Live View.
-   ****: Newly created document detailing functional, database, ZoneMinder, AI, and backend API requirements for Alert Center.
-   ****: Newly created document detailing functional, database, ZoneMinder, AI, and backend API requirements for Site Overview.
-   ****: Newly created document detailing functional, database, ZoneMinder, AI, and backend API requirements for Personnel Management.
-   ****: New, centralized document serving as the single source of truth for all application-specific database schema definitions. Continuously updated with new tables (e.g., , , , , , , , , ) and enhanced fields discovered during screen analyses.
-   ****: New document created to prioritize the order of screen analyses.
</code_architecture>

<pending_tasks>
-   Personnel Management Screen: Fix runtime bug.
-   My Profile Screen: Implement full functionality.
-   AWS MySQL Setup: User needs to provide connection details.
-   Cesium Camera Zoom: Fine-tune zoom for individual camera visibility.
-   ZoneMinder Integration Review: Start reviewing ZoneMinder for integration.
-   ZoneMinder API Layer: Build ZoneMinder client API layer in the backend.
-   VMS Tables Removal: Remove VMS-related tables, keeping only solution tables.
-   Screen Database Review: Review each screen for database accommodation.
-   Database Structure Creation: Create proper AWS MySQL database structure.
-   Backend API Creation: Create necessary backend APIs.
-   ZoneMinder DB Integration: Integrate with ZoneMinder database.
-   Continue comprehensive screen analysis for remaining screens.
</pending_tasks>

<current_work>
Immediately prior to this summary, the AI engineer was engaged in a major strategic initiative: a comprehensive, screen-by-screen analysis of the entire application. This aims to build a bulletproof backend development roadmap by meticulously documenting functional requirements, database schema needs, and specific integration points for ZoneMinder (VMS) and Roboflow (AI models) for each of the 27 identified application screens.

A significant architectural decision was the introduction of a  file, serving as the single source of truth for all application-specific database table definitions, continuously updated as analysis progresses.

Progress made:
1.  **My Dashboard ()**: Analysis document () created and extensively updated with complete functional analysis, detailed fixed database schema (8 tables, 3 new), comprehensive ZoneMinder integration, Roboflow AI integration, and full backend API specifications, referencing .
2.  **GeoSpatial View ()**: Analysis () completed, detailing its immersive 3D functional aspects, database requirements (new  table, enhanced geospatial fields), ZoneMinder integration (camera mapping, stream URLs), AI integration (geospatial AI processing), and backend API requirements.  updated.
3.  **Live View ()**: Analysis () completed, covering multi-camera grid, real-time AI overlays, PTZ controls, recording management. New  table added to schema, along with enhanced camera/site_camera fields.
4.  **Alert Center ()**: Analysis () completed, focusing on alert dashboard, filtering, list/detail management, evidence system, and collaboration. Three new tables (, , ) added to master schema.
5.  **Prioritization**: A  was created to guide the order of analysis.
6.  **Site Overview ()**: Analysis () was initiated and completed.
7.  **Personnel Management ()**: Analysis () was initiated and completed, identifying four new tables (, , , ) that were added to the Master Database Schema.

The current work concluded with updating the Master Database Schema statistics after the Personnel Management analysis.
</current_work>

<optional_next_step>
Continue the comprehensive screen analysis for the next high-priority screen.
</optional_next_step>
